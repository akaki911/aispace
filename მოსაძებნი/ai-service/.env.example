# ------------------------------------------------------------ 
# AI service environment example 
# Copy to ai-service/.env and replace CHANGE_ME placeholders 
# with valid credentials before starting the microservice. 
# ------------------------------------------------------------ 

# === Core runtime configuration === 
# Sets runtime environment mode. Use "production" in live deployments. 
NODE_ENV=development 
# Primary HTTP port exposed by the AI service. 
PORT=5001 
# Legacy compatibility port variable. Keep in sync with PORT when overriding. 
AI_PORT=5001 
# Enables verbose diagnostic logging for troubleshooting sessions. 
DEBUG_MODE=false 
# Enables extra performance tracing logs; disable in most environments. 
VERBOSE_PERFORMANCE_LOGS=false 

# === Service endpoints and origins === 
# URL of the backend API that receives AI callbacks (required in production). 
BACKEND_URL=http://localhost:5002 
# Frontend origin allowed to access this service (set to deployed frontend URL in production). 
FRONTEND_URL=http://localhost:5173 
# Public deployment URL for CORS allow-listing when hosting the AI service separately. 
DEPLOYMENT_URL= 
# Replit-hosted URL used for fallback routing when running inside Replit workspaces. 
REPLIT_URL=https://აქ_რეპლიტის_ლინკი.replit.dev 

# === Authentication and security === 
# Shared secret between backend and AI service. Rotate before going to production. 
AI_INTERNAL_TOKEN=CHANGE_ME_AI_INTERNAL_TOKEN 
# Token sent with outbound callbacks to authenticate against the backend. 
AI_SERVICE_TOKEN=CHANGE_ME_AI_SERVICE_TOKEN 
# Comma-separated list of backend IPs allowed to call privileged routes. 
ALLOWED_BACKEND_IPS=127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16 

# === Firebase configuration === 
# Firebase project identifier used for Firestore and auth integrations. 
FIREBASE_PROJECT_ID=YOUR_FIREBASE_PROJECT_ID 
# Full JSON service account when using a single secret for Firebase admin access. 
FIREBASE_SERVICE_ACCOUNT_KEY={"type":"service_account","project_id":"YOUR_FIREBASE_PROJECT_ID","private_key":"-----BEGIN PRIVATE KEY-----\nCHANGE_ME\n-----END PRIVATE KEY-----\n","client_email":"your-service-account@your-project.iam.gserviceaccount.com"} 
# Raw private key value used when splitting credentials across env vars (omit if using the JSON blob above). 
FIREBASE_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----CHANGE_ME-----END PRIVATE KEY----- 
# Firebase service account email required when FIREBASE_PRIVATE_KEY is provided separately. 
FIREBASE_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com 

# === Database connections === 
# PostgreSQL connection string required for GitHub automation persistence. 
DATABASE_URL=postgres://CHANGE_ME_USER:CHANGE_ME_PASSWORD@localhost:5432/gurulo_ai 

# === GitHub automation === 
# Personal access token with repo permissions for automation features. 
GITHUB_TOKEN=ghp_your_github_token 
# Repository owner used for commits, issues, and automation hooks. 
GITHUB_REPO_OWNER=your-github-username 
# Repository name paired with GITHUB_REPO_OWNER. 
GITHUB_REPO_NAME=your-repository 
# Full repository URL used by git clients when cloning or pushing updates. 
GITHUB_REPO_URL=https://github.com/your-github-username/your-repository.git 
# Webhook secret required when validating GitHub webhook deliveries. 
GITHUB_WEBHOOK_SECRET=CHANGE_ME_GITHUB_WEBHOOK_SECRET 
# Toggle to enable automatic GitHub issue creation when detectors fire. 
AUTO_ISSUE_CREATION=false 
# Toggle to automatically remove stale collaborators during repository hygiene jobs. 
AUTO_REMOVE_COLLABORATORS=false 

# === Backup configuration === 
# Encryption key for securing repository backup archives. 
BACKUP_ENCRYPTION_KEY=CHANGE_ME_BASE64_KEY 
# Primary Git repository (owner/name) for storing encrypted backups. 
PRIMARY_BACKUP_REPO=owner/primary-backup-repo 
# Secondary Git repository (owner/name) used as redundancy for backups. 
SECONDARY_BACKUP_REPO=owner/secondary-backup-repo 
# Tertiary Git repository (owner/name) for long-term archival backups. 
TERTIARY_BACKUP_REPO=owner/tertiary-backup-repo 

# === AI provider configuration === 
# GROQ API key required for live model invocations. 
GROQ_API_KEY=gsk_your_groq_api_key 
# Temperature override for Gurulo model prompts; adjust to fine-tune creativity. 
GURULO_TEMP=0.6 
# Optional path to a custom models configuration file. 
MODELS_CONFIG_PATH=./models.config.json 

# === Memory and storage === 
# Directory for storing conversational memory snapshots. 
MEMORY_STORAGE_PATH=./memory_data 
# Directory for storing extracted fact records. 
MEMORY_FACTS_PATH=./memory_facts 

# === Monitoring and observability === 
# Interval (ms) between aggregated performance log entries. 
PERFORMANCE_LOG_INTERVAL_MS=60000 
# Interval (ms) for checking process memory usage. 
MEMORY_CHECK_INTERVAL_MS=30000 
# Threshold (MB) that triggers memory usage warnings in logs. 
MEMORY_WARNING_MB=500 
# Prometheus metrics port exposed when metrics collection is enabled. 
METRICS_PORT=9091 
# OpenTelemetry/Jaeger collector endpoint used when distributed tracing is enabled. 
JAEGER_ENDPOINT=http://localhost:14268/api/traces 
# Set to 1 to stream tailing logs into the Replit monitor service. 
SYSTEM_LOGS_TAIL=0
